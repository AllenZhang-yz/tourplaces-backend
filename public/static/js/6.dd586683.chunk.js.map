{"version":3,"sources":["shared/components/UIElements/Card.tsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.tsx","shared/hooks/useForm.ts","places/pages/UpdatePlace.tsx"],"names":["Card","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","inputValue","isTouched","Input","id","label","element","placeholder","rows","errorText","onInput","initialState","initialValue","initialIsValid","useReducer","inputState","dispatch","useEffect","changeHandler","touchHandler","el","onChange","onBlur","htmlFor","formReducer","formIsValid","inputId","inputs","useForm","formState","useCallback","inputData","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","pid","useParams","history","useHistory","title","description","inputHandler","setFormData","a","process","responseData","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","Authorization","token","userId","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/6.dd586683.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.scss';\nimport { ICardProps } from '../../../interfaces/other/Card';\n\nconst Card: React.FC<ICardProps> = ({ className, style, children }) => {\n  return (\n    <div className={`card ${className}`} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { IValidators } from '../../interfaces/other/Input';\n\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val: number) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val: number) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val: number) => ({\n  type: VALIDATOR_TYPE_MIN,\n  val: val,\n});\nexport const VALIDATOR_MAX = (val: number) => ({\n  type: VALIDATOR_TYPE_MAX,\n  val: val,\n});\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value: string, validators: IValidators[]) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.val) {\n      if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n        isValid = isValid && value.trim().length >= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n        isValid = isValid && value.trim().length <= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_MIN) {\n        isValid = isValid && +value >= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_MAX) {\n        isValid = isValid && +value <= validator.val;\n      }\n      if (validator.type === VALIDATOR_TYPE_EMAIL) {\n        isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n      }\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { FC, ChangeEvent, useReducer, useEffect } from 'react';\nimport { validate } from '../../util/validators';\nimport { IInput, IValidators } from '../../../interfaces/other/Input';\nimport './Input.scss';\n\ntype ActionType = {\n  type: 'CHANGE' | 'TOUCH';\n  val?: string;\n  validators?: IValidators[];\n};\n\ninterface IState {\n  inputValue: string;\n  isValid: boolean;\n  isTouched: boolean;\n}\n\nconst inputReducer = (state: IState, action: ActionType) => {\n  switch (action.type) {\n    case 'CHANGE':\n      if (action.val && action.validators) {\n        return {\n          ...state,\n          inputValue: action.val,\n          isValid: validate(action.val, action.validators),\n        };\n      } else if (!action.val && action.validators) {\n        return {\n          ...state,\n          inputValue: '',\n          isValid: validate('', action.validators),\n        };\n      } else {\n        return state;\n      }\n\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input: FC<IInput> = ({\n  id,\n  label,\n  element,\n  type,\n  placeholder,\n  rows,\n  errorText,\n  validators,\n  onInput,\n  initialValue,\n  initialIsValid,\n}) => {\n  const initialState: IState = {\n    inputValue: initialValue || '',\n    isValid: initialIsValid || false,\n    isTouched: false,\n  };\n\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\n  const { inputValue, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, inputValue, isValid);\n  }, [onInput, id, inputValue, isValid]);\n\n  const changeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    dispatch({\n      type: 'CHANGE',\n      val: e.target.value,\n      validators: validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    });\n  };\n  const el =\n    element === 'input' ? (\n      <input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.inputValue}\n      />\n    ) : (\n      <textarea\n        id={id}\n        rows={rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.inputValue}\n      />\n    );\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={id}>{label}</label>\n      {el}\n      {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\ninterface IInput {\n  [inputId: string]: {\n    value: string | File | undefined;\n    isValid: boolean;\n  };\n}\n\ninterface IState {\n  inputs: IInput;\n  isValid: boolean;\n}\n\nconst formReducer = (state: IState, action: any) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid,\n          },\n        },\n        isValid: formIsValid,\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialState: IState) => {\n  const [formState, dispatch] = useReducer(formReducer, initialState);\n\n  const inputHandler = useCallback(\n    (id: string, value: string | File | undefined, isValid: boolean) => {\n      dispatch({\n        type: 'INPUT_CHANGE',\n        value,\n        isValid,\n        inputId: id,\n      });\n    },\n    []\n  );\n\n  const setFormData = useCallback((inputData: IState) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData.inputs,\n      formIsValid: inputData.isValid,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData] as const;\n};\n","import React, { FC, FormEvent, useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/useForm';\nimport { useHttpClient } from '../../shared/hooks/useHttp';\nimport { AuthContext } from '../../shared/context/authContext';\nimport { IPidParamTypes } from '../../interfaces/other/ReactRouter';\nimport './PlaceForm.scss';\nimport { IPlaceItem } from '../../interfaces/places/place';\n\nconst UpdatePlace: FC = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState<IPlaceItem>();\n  const { pid } = useParams<IPidParamTypes>();\n  const history = useHistory();\n  const [formState, inputHandler, setFormData] = useForm({\n    inputs: {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n    },\n    isValid: false,\n  });\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/${pid}`\n        );\n        setLoadedPlace(responseData.place);\n        if (responseData.place) {\n          setFormData({\n            inputs: {\n              title: {\n                value: responseData.place.title,\n                isValid: true,\n              },\n              description: {\n                value: responseData.place.description,\n                isValid: true,\n              },\n            },\n            isValid: true,\n          });\n        }\n      } catch (err) {}\n    };\n    fetchPlace();\n    // eslint-disable-next-line\n  }, []);\n\n  const placeUpdateSubmitHandler = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${pid}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value,\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n      history.push(`/${auth.userId}/places`);\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialIsValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters)\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialIsValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}