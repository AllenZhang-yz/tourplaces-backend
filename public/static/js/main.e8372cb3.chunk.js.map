{"version":3,"sources":["shared/context/authContext.ts","shared/components/UIElements/LoadingSpinner.tsx","shared/components/UIElements/Backdrop.tsx","shared/hooks/authHook.ts","shared/components/Navigation/MainHeader.tsx","shared/components/Navigation/NavLinks.tsx","shared/components/Navigation/SideDrawer.tsx","shared/components/Navigation/MainNavigation.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","isLoggedIn","userId","userName","token","login","uid","expirationDate","logout","LoadingSpinner","asOverlay","className","Backdrop","onClick","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","show","content","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpDate","setTokenExpDate","setUserId","setUserName","useCallback","uName","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","undefined","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedDataObj","storedData","getItem","parse","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.e8372cb3.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: '',\n  userName: '',\n  token: '',\n  login: (\n    uid: string,\n    token: string,\n    userName: string,\n    expirationDate?: Date\n  ) => {},\n  logout: () => {},\n});\n","import React, { FC } from 'react';\nimport { ILoadingSpinner } from '../../../interfaces/other/LoadingSpinner';\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner: FC<ILoadingSpinner> = ({ asOverlay }) => {\n  return (\n    <div className={`${asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { IBackdropProps } from '../../../interfaces/other/Backdrop';\n\nimport './Backdrop.scss';\n\nconst Backdrop: React.FC<IBackdropProps> = ({ onClick }) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={onClick}></div>,\n    document.getElementById('backdrop-hook') as HTMLElement\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer: NodeJS.Timeout;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState('');\n  const [tokenExpDate, setTokenExpDate] = useState<Date>();\n  const [userId, setUserId] = useState('');\n  const [userName, setUserName] = useState('');\n\n  const login = useCallback(\n    (uid: string, token: string, uName: string, expirationDate?: Date) => {\n      setToken(token);\n      setUserId(uid);\n      setUserName(uName);\n      const tokenExpirationDate =\n        expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n      setTokenExpDate(tokenExpirationDate);\n      localStorage.setItem(\n        'userData',\n        JSON.stringify({\n          userId: uid,\n          token,\n          userName: uName,\n          expiration: tokenExpirationDate.toISOString(),\n        })\n      );\n    },\n    []\n  );\n  const logout = useCallback(() => {\n    setToken('');\n    setTokenExpDate(undefined);\n    setUserId('');\n    setUserName('');\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpDate) {\n      const remainingTime = tokenExpDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpDate]);\n\n  useEffect(() => {\n    const storedData = localStorage.getItem('userData');\n    let storedDataObj;\n    if (storedData) {\n      storedDataObj = JSON.parse(storedData);\n    }\n    if (\n      storedDataObj &&\n      storedDataObj.token &&\n      storedDataObj.userId &&\n      storedDataObj.userName &&\n      new Date(storedDataObj.expiration) > new Date()\n    ) {\n      login(\n        storedDataObj.userId,\n        storedDataObj.token,\n        storedDataObj.userName,\n        new Date(storedDataObj.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId, userName };\n};\n","import React from 'react';\n\nimport './MainHeader.scss';\n\nconst MainHeader: React.FC = ({ children }) => {\n  return <header className=\"main-header\">{children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/authContext';\nimport './NavLinks.scss';\n\nconst NavLinks: React.FC = () => {\n  const auth = useContext(AuthContext);\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li onClick={auth.logout}>\n          <button>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { ISideDrawerProps } from '../../../interfaces/other/SideDrawer';\n\nimport './SideDrawer.scss';\n\nconst SideDrawer: React.FC<ISideDrawerProps> = ({\n  children,\n  show,\n  onClick,\n}) => {\n  const content = (\n    <CSSTransition\n      in={show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={onClick}>\n        {children}\n      </aside>\n    </CSSTransition>\n  );\n  return ReactDOM.createPortal(\n    content,\n    document.getElementById('drawer-hook') as HTMLElement\n  );\n};\n\nexport default SideDrawer;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../../components/UIElements/Backdrop';\nimport { AuthContext } from '../../../shared/context/authContext';\nimport './MainNavigation.scss';\n\nconst MainNavigation = () => {\n  const auth = useContext(AuthContext);\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Your Places</Link>\n          {auth.userName && (\n            <div className=\"welcome-info\">Welcome, {auth.userName}</div>\n          )}\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/authContext';\nimport { useAuth } from './shared/hooks/authHook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App: React.FC = () => {\n  const { token, login, logout, userId, userName } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:pid\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token, token, login, logout, userId, userName }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}